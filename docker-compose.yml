version: '3.8'

networks:
  ServiceStationPartsNetwork:
    driver: bridge

services:
  rediscash:
    container_name: RedisCash
    image: redis:7-alpine
    networks:
      - ServiceStationPartsNetwork
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  identitydatabase:
    container_name: IdentityDatabase
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Qwerty123!
      - MSSQL_PID=Express
    networks:
      - ServiceStationPartsNetwork
    ports:
      - "1434:1433"
    volumes:
      - identity_data:/var/opt/mssql
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Qwerty123! -Q 'SELECT 1'"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 60s

  partsdatabase:
    container_name: PartsDatabase
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Qwerty123!
      - MSSQL_PID=Express
    networks:
      - ServiceStationPartsNetwork
    ports:
      - "1435:1433"
    volumes:
      - parts_data:/var/opt/mssql
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Qwerty123! -Q 'SELECT 1'"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 60s

  jobsdatabase:
    container_name: JobsDatabase
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Qwerty123!
      - MSSQL_PID=Express
    networks:
      - ServiceStationPartsNetwork
    ports:
      - "1436:1433"
    volumes:
      - jobs_data:/var/opt/mssql
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Qwerty123! -Q 'SELECT 1'"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 60s

  bloc.chain:
    container_name: blocchain
    image: ${DOCKER_REGISTRY-}bchnet:latest
    networks:
      - ServiceStationPartsNetwork
    ports:
      - "8545:8545"
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8545"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  parts.api:
    container_name: partsapi
    image: ${DOCKER_REGISTRY-}partsapi
    build:
      context: .
      dockerfile: PARTS.API/Dockerfile
    networks:
      - ServiceStationPartsNetwork
    ports:
      - "2030:8083"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8083
      - REDIS=RedisCash:6379
      - DB_HOST=PartsDatabase
      - DB_USER=sa
      - DB_NAME=ServiceStationParts
      - DB_SA_PASSWORD=Qwerty123!
      - RBBITMQ_USER=guest
      - RBBITMQ_PASS=guest
    depends_on:
      partsdatabase:
        condition: service_started
      rediscash:
        condition: service_started
      bloc.chain:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s  # Increased for seeding time

  jobs.api:
    container_name: jobsapi
    image: ${DOCKER_REGISTRY-}jobsapi
    build:
      context: .
      dockerfile: JOBS.API/Dockerfile
    networks:
      - ServiceStationPartsNetwork
    ports:
      - "2040:8082"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8082
      - REDIS=RedisCash:6379
      - DB_HOST=JobsDatabase      
      - DB_USER=sa
      - DB_NAME=ServiceStationJobs
      - DB_SA_PASSWORD=Qwerty123!
      - RBBITMQ_USER=guest
      - RBBITMQ_PASS=guest
    depends_on:
      jobsdatabase:
        condition: service_started
      rediscash:
        condition: service_started
      bloc.chain:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  identity.api:
    container_name: identityapi
    image: ${DOCKER_REGISTRY-}identityapi
    build:
      context: .
      dockerfile: IDENTITY.API/Dockerfile
    networks:
      - ServiceStationPartsNetwork
    ports:
      - "2050:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8081
      - REDIS=RedisCash:6379
      - DB_HOST=IdentityDatabase
      - DB_USER=sa
      - DB_NAME=ServiceStationIdentity
      - DB_SA_PASSWORD=Qwerty123!
      - RBBITMQ_USER=guest
      - RBBITMQ_PASS=guest
    depends_on:
      identitydatabase:
        condition: service_started
      rediscash:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  api.gateway:
    container_name: api_gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: API.GATEWAY/Dockerfile
    networks:
      - ServiceStationPartsNetwork
    ports:
      - "2060:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - PARTS_API_URL=http://partsapi:8083
      - JOBS_API_URL=http://jobsapi:8082
      - IDENTITY_API_URL=http://identityapi:8081
    depends_on:
      identity.api:
        condition: service_started
      jobs.api:
        condition: service_started
      parts.api:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    
  ml.api:
    container_name: mlapi
    image: ${DOCKER_REGISTRY-}servicestationfastapi:latest
    networks:
      - ServiceStationPartsNetwork
    ports:
      - "2070:8000"
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
  ppml.api:
   container_name: ppmlapi
   image: ${DOCKER_REGISTRY-}parts_prediction:latest
   networks:
     - ServiceStationPartsNetwork
   ports:
     - "2080:8000"
   environment:
     - REDIS_HOST=rediscash
     - REDIS_PORT=6379
     - REDIS_DB=1
     - MODEL_PATH=/app/model_lstm_best.pth
     - LOG_LEVEL=INFO
   depends_on:
     rediscash:
       condition: service_healthy
   restart: unless-stopped
   # healthcheck:
   #   test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
   #   interval: 30s
   #   timeout: 10s
   #   retries: 3
   #   start_period: 120s
 
volumes:
  identity_data:
    driver: local
  parts_data:
    driver: local
  jobs_data:
    driver: local
  redis_data:
    driver: local